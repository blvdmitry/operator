.root {
  position: relative;
}

.root:active .field {
  transform: scale(0.94);
}

.input {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  opacity: 0;
  inset-block-start: 0;
  inset-inline-start: 0;
  border: 0;
  margin: 0;
}

.hitbox {
  display: none;
}

@media (--bui_small_viewport) {
  .hitbox {
    display: block;
    position: absolute;
    inset-block-start: 50%;
    transform: translateY(-50%);

    /* height is set to 44px as that is the minimum required hitbox size for a11y reasons */
    height: 44px;
    width: 100%;
  }
}

.container {
  cursor: pointer;
}

.icon {
  align-items: center;
  display: inline-flex;
  height: var(--bui_font_body_2_line-height);
}

.field {
  height: calc(var(--bui_spacing_1x) * 5);
  width: calc(var(--bui_spacing_1x) * 5);
  background-color: var(--bui_color_background_elevation_one);
  border: var(--bui_border_width_100) solid var(--bui_color_border);
  border-radius: var(--bui_border_radius_100);
  position: relative;
  color: var(--bui_color_on_action_background);
  box-sizing: border-box;
  flex-shrink: 0;
  transition: var(--bui_animation_press);
  transition-property: background-color, border-color;
}

.checkbox-icon {
  position: absolute;

  /* stylelint-disable-next-line safe-logical-properties/validate-logical-usage */
  left: 50%;
  inset-block-start: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: opacity var(--bui_animation_press);
}

.bottom {
  margin-block-start: var(--bui_spacing_1x);
}

/* Error state */
.root--error .field {
  border-color: var(--bui_color_destructive_border);
  border-width: var(--bui_border_width_200);
}

/* Indeterminate state */
.input:indeterminate ~ .container .field {
  border-color: var(--bui_color_action_background);
  background-color: var(--bui_color_action_background);
}

/* 
* Using left/top here for centering since transform isn't mirrored in RTL
*/
.input:indeterminate ~ .container .field::before {
  content: "";
  position: absolute;

  /* stylelint-disable-next-line safe-logical-properties/validate-logical-usage */
  left: 50%;
  inset-block-start: 50%;
  transform: translate(-50%, -50%);
  width: var(--bui_spacing_3x);
  height: var(--bui_spacing_half);
  background: var(--bui_color_on_action_background);
  border-radius: 1px;
}

/* Checked state */
.input:checked ~ .container .field,
.input:checked:focus ~ .container .field {
  border-color: var(--bui_color_action_background);
  background: var(--bui_color_action_background);
}

.input:checked ~ .container .checkbox-icon {
  opacity: 1;
}

/* Disabled state */
.input:disabled ~ .container .field {
  border-color: var(--bui_color_border_disabled);
  border-width: var(--bui_border_width_100);
  background-color: var(--bui_color_background_disabled_alt);
}

.input:disabled:checked ~ .container .field,
.input:disabled:indeterminate ~ .field {
  background-color: var(--bui_color_background_disabled);
  border-color: var(--bui_color_background_disabled);
}

.input:disabled ~ .container {
  cursor: not-allowed;
}

/* Focus state */
[data-bui-keyboard] .input:focus ~ .container .field {
  @apply --bui_focus;
}
